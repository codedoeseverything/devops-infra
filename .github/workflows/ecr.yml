################################################
#  GITHUB ACTION WORKFLOW NAME
################################################
name: Release to Staging environment


################################################
#  GITHUB ACTION EVENT TRIGGER
################################################
on:
  workflow_dispatch:
  push:
    # branches: [ 'trunk' ]
    branches: [ 'develop' ]
    

################################################
#  GITHUB ACTION JOBS
################################################
jobs:
  release-stage:
    name: release-stage
    runs-on: ubuntu-latest


################################################
#  GITHUB ACTIONS GLOBAL ENV VARIABLES  
################################################
    env:
      REGION : ap-southeast-2
      ENV : stage # Valid values are sandbox,stage,live only
      STACK_NAME: beta # Valid values are au,us,uk,p2,lf,nu,alpha,beta,shared only
      SUBDOMAIN: devops-infra
      CFNS3BucketName: devops-cfn-templates1
      PRIVATES3BucketName: devops-private1
      LOGGING_LEVEL: INFO  #ERROR, INFO, or NONE.
      ISZONEEXIST: false  #false, true.
      P1PUBLICZONEID: Z07084721W45W9OIAP0PJ
      PUBLICZONENAME: testing.internal.p2.practera.com
      PRIVATEZONENAME: local.testing.internal.p2.practera.com
      PUBLICZONEID: NA
      RUNSECRETJOB: false
      RUNACMCERTJOB: false
      S3BUCKETFLAGCHECK: beta-cfn-empty-resource


################################################
#  GITHUB REPO CHECKOUT 
################################################
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis


################################################
#  PYTHON ENV  
################################################
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8


################################################
#  PYTHON MODULES CACHE  
################################################
      - name: Cache Python dependencies
        uses: actions/cache@v2
        id: cache-python
        with:
          path: ${{ env.pythonLocation}}/lib/python3.8/site-packages/*
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-


################################################
#  PYTHON MODULES INSTALL  
################################################
      - name: Install Python dependencies
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: |
          echo "Installing dependencies and caching them."
          pip install -r requirements.txt



################################################
#  AWS CLI CONFIGURATION
################################################ 
      - name: Configure AWS credentials from $STACK_NAME account in $REGION region
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_AWS_KEY }}
          aws-secret-access-key: ${{ secrets.DEVOPS_SECRET_KEY }}
          aws-region: ${{ env.REGION }}



################################################
#  2.e P1 AWS ECR POLICY
################################################ 
      - name: P1 Dependency Resource creation using script for ECR Push and Pull access
        run: |
          chmod +x scripts/cfn-ecr-get-policy.sh && scripts/cfn-ecr-get-policy.sh
          python3 scripts/cfn-ecr-policy.py
          chmod +x scripts/cfn-ecr-set-policy.sh && scripts/cfn-ecr-set-policy.sh
        env:
          ECR_REPONAME: test
          CURRENTACCOUNTID: 121943667802
      

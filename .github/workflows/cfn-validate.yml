################################################
#  GITHUB ACTION WORKFLOW NAME
################################################
name: Cloudformation template validation


################################################
#  GITHUB ACTION EVENT TRIGGER
################################################
on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'develop'
      - 'trunk'
      - 'release/**'
    types: [opened, synchronize, reopened]


################################################
#  GITHUB ACTION JOBS
################################################
jobs:
  cfn-validate:
    name: cfn-validate
    runs-on: ubuntu-latest


################################################
#  GITHUB ACTIONS GLOBAL ENV VARIABLES  
################################################
    env:
      SUBDOMAIN: devops-infra


################################################
#  GITHUB REPO CHECKOUT 
################################################
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis


################################################
#  PYTHON ENV  
################################################
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8


################################################
#  PYTHON MODULES CACHE  
################################################
      - name: Cache Python dependencies
        uses: actions/cache@v2
        id: cache-python
        with:
          path: ${{ env.pythonLocation}}/lib/python3.8/site-packages/*
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-


################################################
#  PYTHON MODULES INSTALL  
################################################
      - name: Install Python dependencies
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: |
          echo "Installing dependencies and caching them."
          pip install -r requirements.txt


################################################
#  CLOUDFORMATION LINT ANALYSIS TEST 
################################################
      - name: Run cloudformation template Lint analysis test using cfn-lint
        uses: docker://ghcr.io/scottbrenner/cfn-lint-action:master
          

################################################
#  CLOUDFORMATION STATIC ANALYSIS TEST  
################################################
      - name: Run cloudformation template static analysis test using cfn-nag
        uses: stelligent/cfn_nag@master
        with:
          input_path: cfn-templates
          extra_args: --fail-on-warnings -o json --blacklist-path .cfn_nag_blacklist.yml


##########################################################
#  SLACK NOTIFICATION
##########################################################       
      - name: Slack Notification
        if: always() # Pick up events even if the job fails or is canceled.
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        with:
          status: ${{ job.status }}
          author_name: ${{ env.SUBDOMAIN }} deployed to ${{ env.ENV }} environemnt in ${{ env.STACK_NAME }} AWS account
          mention: 'here'
          if_mention: failure,cancelled
          job_name: centralized # Match the name above.
          fields: repo,commit,eventName,ref,workflow,message,author,job,took
          custom_payload: |
            {
            username: 'GitHub Action CI WorkFlow',
            icon_emoji: ':github:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text:
             `${process.env.AS_REPO}\n
              ${process.env.AS_COMMIT}\n
              ${process.env.AS_EVENT_NAME}\n
              @${process.env.AS_REF}\n
              @${process.env.AS_WORKFLOW}\n
              ${process.env.AS_MESSAGE}\n
              ${process.env.AS_AUTHOR}\n
              ${process.env.AS_JOB}\n
              ${process.env.AS_TOOK}`,
            }]
            }